database = "BC3MSD"
a=readme("seqFeatWithKmerFreqs.txt.gz",gzip=T)
if(database == "B") a=a[,1:10]
if(database == "BC") a=a[,c(1:10,grep("Codon",colnames(a)))]
if(database == "B5") a=a[,c(1:10,grep("5UTR",colnames(a)))]
if(database == "BO") a=a[,c(1:9,grep("ORF",colnames(a)))]
if(database == "B3" | database == "B3M") a=a[,c(1:10,grep("3UTR",colnames(a)))]
if(database == "BCO") a=a[,c(1:9,grep("Codon",colnames(a)),grep("ORF",colnames(a)))]
if(grepl("BC3",database)) a=a[,c(1:10,grep("Codon",colnames(a)),grep("3UTR",colnames(a)))]
# miRNA prediction
if(grepl("M",database)){
  b=readme("CWCS.txt.gz",gzip=T)
  colnames(b)[2:ncol(b)]=paste0("MIR.",colnames(b)[2:ncol(b)])
  b[2:ncol(b)] = -1*b[2:ncol(b)]
  a=merge(a,b,by=1,all.x=1)
  a[is.na(a)]=0
  say("with miRNA features")
}
seqpreds <- function(tool){
  humanorf=readme(paste0(tool,"_predictions_mm10_90/ORF_avg.txt.gz"), gzip=T)
  human3p=readme(paste0(tool,"_predictions_mm10_90/3pUTR_avg.txt.gz"), gzip=T)
  human5p=readme(paste0(tool,"_predictions_mm10_90/5pUTR_avg.txt.gz"), gzip=T)
  colnames(humanorf)[2:ncol(humanorf)]=paste0(tool,colnames(humanorf)[2:ncol(humanorf)],".ORF")
  colnames(human3p)[2:ncol(human3p)]=paste0(tool,colnames(human3p)[2:ncol(human3p)],".3UTR")
  colnames(human5p)[2:ncol(human5p)]=paste0(tool,colnames(human5p)[2:ncol(human5p)],".5UTR")
  a=merge(humanorf,human3p,by=1,all=T)
  a=merge(a,human5p,by=1,all=T)
  a[is.na(a)]=0
  a
}
if(grepl("S",database)){
  say("with SeqWeaver features")
  a=merge(a,seqpreds("SeqWeaver"),by=1)
}
if(grepl("D",database)){
  say("with DeepRiPe features")
  a=merge(a,seqpreds("DeepRiPe"),by=1)
}
say("With Ensembl IDs + Features: ", nrow(a))
say("Dimensions: ", dim(a))
z=apply(a,2,function(x) sum(is.na(x)))
sum(z)
z
a[1:10,1:10]
q()
database = "BC3MSD"
a=readme("seqFeatWithKmerFreqs.txt.gz",gzip=T)
if(database == "B") a=a[,1:10]
if(database == "BC") a=a[,c(1:10,grep("Codon",colnames(a)))]
if(database == "B5") a=a[,c(1:10,grep("5UTR",colnames(a)))]
if(database == "BO") a=a[,c(1:9,grep("ORF",colnames(a)))]
if(database == "B3" | database == "B3M") a=a[,c(1:10,grep("3UTR",colnames(a)))]
if(database == "BCO") a=a[,c(1:9,grep("Codon",colnames(a)),grep("ORF",colnames(a)))]
if(grepl("BC3",database)) a=a[,c(1:10,grep("Codon",colnames(a)),grep("3UTR",colnames(a)))]
a[1:10,1:10]
dim(a)
a=readme("seqFeatWithKmerFreqs.txt.gz",gzip=T)
a[1:10,1:10]
database = "BC3MSD"
a=readme("seqFeatWithKmerFreqs.txt.gz",gzip=T)
if(database == "B") a=a[,1:10]
if(database == "BC") a=a[,c(1:10,grep("Codon",colnames(a)))]
if(database == "B5") a=a[,c(1:10,grep("5UTR",colnames(a)))]
if(database == "BO") a=a[,c(1:9,grep("ORF",colnames(a)))]
if(database == "B3" | database == "B3M") a=a[,c(1:10,grep("3UTR",colnames(a)))]
if(database == "BCO") a=a[,c(1:9,grep("Codon",colnames(a)),grep("ORF",colnames(a)))]
if(grepl("BC3",database)) a=a[,c(1:10,grep("Codon",colnames(a)),grep("3UTR",colnames(a)))]
# miRNA prediction
if(grepl("M",database)){
  b=readme("CWCS.txt.gz",gzip=T)
  colnames(b)[2:ncol(b)]=paste0("MIR.",colnames(b)[2:ncol(b)])
  b[2:ncol(b)] = -1*b[2:ncol(b)]
  a=merge(a,b,by=1,all.x=1)
  a[is.na(a)]=0
  say("with miRNA features")
}
seqpreds <- function(tool){
  humanorf=readme(paste0(tool,"_predictions_mm10_90/ORF_avg.txt.gz"), gzip=T)
  human3p=readme(paste0(tool,"_predictions_mm10_90/3pUTR_avg.txt.gz"), gzip=T)
  human5p=readme(paste0(tool,"_predictions_mm10_90/5pUTR_avg.txt.gz"), gzip=T)
  colnames(humanorf)[2:ncol(humanorf)]=paste0(tool,colnames(humanorf)[2:ncol(humanorf)],".ORF")
  colnames(human3p)[2:ncol(human3p)]=paste0(tool,colnames(human3p)[2:ncol(human3p)],".3UTR")
  colnames(human5p)[2:ncol(human5p)]=paste0(tool,colnames(human5p)[2:ncol(human5p)],".5UTR")
  a=merge(humanorf,human3p,by=1,all=T)
  a=merge(a,human5p,by=1,all=T)
  a[is.na(a)]=0
  a
}
if(grepl("S",database)){
  say("with SeqWeaver features")
  a=merge(a,seqpreds("SeqWeaver"),by=1)
}
if(grepl("D",database)){
  say("with DeepRiPe features")
  a=merge(a,seqpreds("DeepRiPe"),by=1)
}
say("With Ensembl IDs + Features: ", nrow(a))
say("Dimensions: ", dim(a))
a[1:10,1:10]
a[1:10,1:11]
z=apply(a,2,function(x) sum(is.na(x)))
sum(z)
a=readme("seqFeatWithKmerFreqs.txt.gz",gzip=T)
table(unlist(lapply(colnames(a), function(x) strsplit(x, '\\.')[[1]][1]))))
type = as.facto(table(unlist(lapply(colnames(a), function(x) strsplit(x, '\\.')[[1]][1]))))
type = as.facto(table(unlist(lapply(colnames(a), function(x) strsplit(x, '\\.')[[1]][1]))))
type = as.factor(table(unlist(lapply(colnames(a), function(x) strsplit(x, '\\.')[[1]][1]))))
type
type[type==1]
sum(type[type==1])
length(type[type==1])
database="BC3MSD"
a=readme("seqFeatWithKmerFreqs.txt.gz",gzip=T)
if(database == "B") a=a[,1:10]
if(database == "BC") a=a[,c(1:10,grep("Codon",colnames(a)))]
if(database == "B5") a=a[,c(1:10,grep("5UTR",colnames(a)))]
if(database == "BO") a=a[,c(1:9,grep("ORF",colnames(a)))]
if(database == "B3" | database == "B3M") a=a[,c(1:10,grep("3UTR",colnames(a)))]
if(database == "BCO") a=a[,c(1:9,grep("Codon",colnames(a)),grep("ORF",colnames(a)))]
if(database == "B5C") a=a[,c(1:10,grep("Codon",colnames(a)),grep("5UTR",colnames(a)))]
if(grepl("BC3",database)) a=a[,c(1:10,grep("Codon",colnames(a)),grep("3UTR",colnames(a)))]
# miRNA prediction
if(grepl("M",database)){
  b=readme("CWCS.txt.gz",gzip=T)
  colnames(b)[2:ncol(b)]=paste0("MIR.",colnames(b)[2:ncol(b)])
  b[2:ncol(b)] = -1*b[2:ncol(b)]
  a=merge(a,b,by=1,all.x=1)
  a[is.na(a)]=0
  say("with miRNA features")
}
seqpreds <- function(tool){
  humanorf=readme(paste0(tool,"_predictions_mm10_90/ORF_avg.txt.gz"), gzip=T)
  human3p=readme(paste0(tool,"_predictions_mm10_90/3pUTR_avg.txt.gz"), gzip=T)
  human5p=readme(paste0(tool,"_predictions_mm10_90/5pUTR_avg.txt.gz"), gzip=T)
  colnames(humanorf)[2:ncol(humanorf)]=paste0(tool,colnames(humanorf)[2:ncol(humanorf)],".ORF")
  colnames(human3p)[2:ncol(human3p)]=paste0(tool,colnames(human3p)[2:ncol(human3p)],".3UTR")
  colnames(human5p)[2:ncol(human5p)]=paste0(tool,colnames(human5p)[2:ncol(human5p)],".5UTR")
  a=merge(humanorf,human3p,by=1,all=T)
  a=merge(a,human5p,by=1,all=T)
  a[is.na(a)]=0
  a
}
if(grepl("S",database)){
  say("with SeqWeaver features")
  a=merge(a,seqpreds("SeqWeaver"),by=1)
}
if(grepl("D",database)){
  say("with DeepRiPe features")
  a=merge(a,seqpreds("DeepRiPe"),by=1)
}
colnames(a)
colnames(a)[1:10]
colnames(a)[3:10]=paste0("Basic.", colnames(a)[3:10])
colnames(a)=gsub("SeqWeaver","SeqWeaver.",colnames(a))
colnames(a)=gsub("DeepRiPe","DeepRiPe.",colnames(a))
type = as.factor(unlist(lapply(names(reorder), function(x) strsplit(x, '\\.')[[1]][1])))
table(type)
type
type = as.factor(unlist(lapply(colnames(a), function(x) strsplit(x, '\\.')[[1]][1])))
table(type)
